#!/bin/sh

: ${BUILD_PATH:=$(mktemp -d)}
: ${SANDBOX_PATH:=$(mktemp -d)}

__PWD=$(pwd)
BUILD_RESULT=${__PWD}/build.result
BUILD_MESSAGE=${__PWD}/build.message
RUN_RESULT=${__PWD}/run.result
RUN_MESSAGE=${__PWD}/run.message
__SCRIPT=${__PWD}/script
__SUBMISSION=${__PWD}/submission
__TESTS=${__PWD}/tests
SCRIPTGEN=--scriptgen

say() {
  __MESSAGE=${__MESSAGE}$1$'\n'
}

test_build() {
  __MESSAGE=
  rm -rf ${BUILD_PATH}
  mkdir -p ${BUILD_PATH}
  rm -rf ${SANDBOX_PATH}
  mkdir -p ${SANDBOX_PATH}
  cp ${__SUBMISSION} ${__TESTS} ${BUILD_PATH}
  cp ${__TESTS} ${SANDBOX_PATH}
  cd ${BUILD_PATH}
  build
  __BUILD_RESULT=$?
  echo ${__BUILD_RESULT} > ${BUILD_RESULT}
  if [ "${__MESSAGE}" != "" ]; then
    echo "${__MESSAGE}" > ${BUILD_MESSAGE}
  fi
  return ${__BUILD_RESULT}
}

test_run() {
  __MESSAGE=
  cd ${SANDBOX_PATH}
  run
  __RUN_RESULT=$?
  echo ${__RUN_RESULT} > ${RUN_RESULT}
  if [ "${__MESSAGE}" != "" ]; then
    echo "${__MESSAGE}" > ${RUN_MESSAGE}
  fi
}

check_files() {
  [ -f ${__SCRIPT} ] && [ -f ${__TESTS} ] && [ -f ${__SUBMISSION} ] && return 0
  return 1
}

generate_script() {
  cat > ${__SCRIPT} <<EOF
# build()
#
# Available:
# - submission: the submission (either text or binary file)
# - tests: test cases (either text or binary file)
# - SANDBOX_PATH: root of the directory where run() will be invoked
build() {
}

# run()
#
# Available:
# - tests: test cases (file, the same as at build())
run() {
}
EOF
}

if [ "$1" == "${SCRIPTGEN}" ]; then
  generate_script
  return 0
fi

if ! check_files; then
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo "This script can be only used if the following files are present in the current"
  echo "working directory:"
  echo ""
  echo " * script: The file that drives the testing process.  An empty skeleton may be"
  echo "           generated by invoking this command with the ${SCRIPTGEN} flag."
  echo ""
  echo " * submission: A submission (input) that is going to be processed by the script."
  echo ""
  echo " * tests: Test cases (input) that may be used for testing."
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  return 1
fi

echo "[INFO] build directory = ${BUILD_PATH}"
echo "[INFO] sandbox (run) directory = ${SANDBOX_PATH}"
echo -n "==> Reading the script..."
. ./script
echo "OK"

echo -n "==> Building the solution..."

if test_build; then
    echo "OK"
    echo -n "==> Running the built submission..."
    if test_run; then
        echo "OK"
    else
        echo "FAILED (see ${RUN_MESSAGE} for details)"
    fi
else
    echo "FAILED (see ${BUILD_MESSAGE} for details)"
fi

cd ${__PWD}
